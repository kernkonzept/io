# vi:ft=make
#MODE   := shared
TARGET  = io

$(GENERAL_D_LOC): $(PKGDIR)/server/src/Makefile.config

include $(PKGDIR)/server/src/Makefile.config

DEFINES-$(CONFIG_L4IO_PCIID_DB) += -DCONFIG_L4IO_PCIID_DB

SUBDIRS      = drivers

SRC_CC_ACPI  = acpi.cc acpi_sci.cc acpi_osl.cc pci-acpi.cc

$(foreach i,$(SRC_CC_ACPI),$(eval CXXFLAGS_acpi/$(i) = -DL4_ACPICA))

SRC_CC-$(CONFIG_L4IO_ACPI) += $(addprefix acpi/,$(SRC_CC_ACPI))

SRC_CC-$(CONFIG_L4IO_PCI)  += virt/pci/vpci.cc \
                              virt/pci/vpci_virtual_root.cc \
                              virt/pci/vpci_pci_bridge.cc \
                              pci/pci-bridge.cc \
                              pci/pci-dev.cc \
                              pci/pci-driver.cc \
                              pci/pci-root.cc \
                              pci/pci-saved-config.cc \
                              pci/msi.cc \
                              pci/pm.cc \
                              pci/acs.cc

SRC_CC := main.cc res.cc phys_space.cc resource.cc hw_device.cc \
          resource_provider.cc \
          hw_root_bus.cc device.cc hw_irqs.cc \
          hw_register_block.cc \
          dma_domain.cc \
          gpio.cc \
          server.cc irqs.cc debug.cc \
          irq_server.cc \
          lua_glue.swg.cc \
          pm.cc \
          virt/vdevice.cc \
          virt/vmsi.cc \
          virt/vicu.cc \
          virt/vbus.cc \
          virt/vproxy_dev.cc \
          virt/vbus_factory.cc \
          virt/gpio/vgpio.cc \
          inhibitor_mux.cc \
          platform_control.cc

SRC_DATA     := io.lua

SRC_CC_x86    = ux.cc
SRC_CC_amd64  = ux.cc

SRC_CC_arm    += arm_dma_domain.cc arm_dma_device.cc optee.cc
SRC_CC_arm64  += arm_dma_domain.cc arm_dma_device.cc optee.cc

SRC_CC       += $(SRC_CC_$(ARCH))
OPTS         := -g -O3

REQUIRES_LIBS                          = libsigma0 libstdc++ lua++ libpthread
REQUIRES_LIBS-$(CONFIG_L4IO_PCIID_DB) += libpciids
REQUIRES_LIBS-$(CONFIG_L4IO_ACPI)     += acpica

REQUIRES_CFLAGS = libio-vbus libio-io
PRIVATE_INCDIR += $(SRC_DIR) $(SRC_DIR)/../libpciids/include

# implementation of lib_subdir, similar to lib_subdir.mk
SUBDIRS += $(SUBDIRS_$(ARCH)) $(SUBDIRS_$(OSYSTEM))
SUBDIR_TARGETS := $(addsuffix /OBJ-$(SYSTEM)/builtin.thin.a,$(SUBDIRS))
SUBDIR_OBJS     = $(addprefix $(OBJ_DIR)/,$(SUBDIR_TARGETS))

# ACPI contrib code has many unused parameters
CPPFLAGS_acpi/acpi.cc     += -Wno-unused-parameter
CPPFLAGS_acpi/acpi_sci.cc += -Wno-unused-parameter
CPPFLAGS_acpi/acpi_osl.cc += -Wno-unused-parameter
CPPFLAGS_acpi/pci-acpi.cc += -Wno-unused-parameter

all::

$(SUBDIR_OBJS): $(OBJ_DIR)/%/OBJ-$(SYSTEM)/builtin.thin.a: %
	$(VERBOSE)$(MAKE) $(MAKECMDGOALS) OBJ_BASE=$(OBJ_BASE)\
	                  -C $(SRC_DIR)/$* $(MKFLAGS)

$(TARGET): $(SUBDIR_OBJS)

EXTRA_LIBS += --whole-archive $(SUBDIR_OBJS) --no-whole-archive

clean-subdir-%:
	$(VERBOSE)$(MAKE) clean OBJ_BASE=$(OBJ_BASE) \
	                  -C $(SRC_DIR)/$* $(MKFLAGS)

clean:: $(addprefix clean-subdir-,$(SUBDIRS))

# regenerate shipped files
ifneq ($(REGEN_FILES),)
all:: $(SRC_DIR)/lua_glue.swg.cc

-include .lua_glue.swg.c_cc.d

SWIG_RM_EXT_C ?= $(L4DIR)/tool/bin/swig-rm-extern-c.pl
SWIG          ?= swig
SWIG_INCDIR   := -I$(SRC_DIR) -I$(SRC_DIR)/../../include -I$(L4DIR)/pkg

%.swg:

$(SRC_DIR)/%.swg.cc: %.swg.c_cc $(SRC_DIR)/Make.rules $(SRC_DIR)/Makefile
	@$(GEN_MESSAGE)
	$(VERBOSE)$(SWIG_RM_EXT_C) $< >$@

%.swg.c_cc: $(SRC_DIR)/%.swg $(SRC_DIR)/Make.rules $(SRC_DIR)/Makefile
	@$(GEN_MESSAGE)
	$(VERBOSE)$(SWIG) $(SWIG_INCDIR) -MD -MF .$*.swg.c_cc.d -c++ -small -lua -o $@ $<
endif
